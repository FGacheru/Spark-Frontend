{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_7__","BoxsComponent","_modalService","_formService","_toastService","title","field","calculated","add_box_config_form","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","name","description","items","markAllAsTouched","invalid","data","url","formData","value","postForm","subscribe","reset","cancel","table","getTableData","err","showToast","api_errors","error","open","remove","close","selectors","viewQuery","src_app_shared_tables_basic_table_basic_table_component__WEBPACK_IMPORTED_MODULE_0__","ctx","InventoryModule","_angular_router__WEBPACK_IMPORTED_MODULE_11__","_invetory_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_12__","src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_13__","declarations","_items_type_config_item_type_config_component__WEBPACK_IMPORTED_MODULE_1__","_boxs_boxs_component__WEBPACK_IMPORTED_MODULE_3__","_price_group_price_group_component__WEBPACK_IMPORTED_MODULE_4__","_price_group_add_price_group_add_price_group_component__WEBPACK_IMPORTED_MODULE_5__","_pay_go_providers_pay_go_providers_component__WEBPACK_IMPORTED_MODULE_6__","_suppliers_suppliers_component__WEBPACK_IMPORTED_MODULE_7__","_product_type_product_type_component__WEBPACK_IMPORTED_MODULE_8__","_item_config_item_config_component__WEBPACK_IMPORTED_MODULE_9__","imports","AdministrationInvetoryRoutes","path","breadcrumb","component","_item_config_item_config_component__WEBPACK_IMPORTED_MODULE_7__","_boxs_boxs_component__WEBPACK_IMPORTED_MODULE_0__","_price_group_add_price_group_add_price_group_component__WEBPACK_IMPORTED_MODULE_3__","_pay_go_providers_pay_go_providers_component__WEBPACK_IMPORTED_MODULE_2__","_suppliers_suppliers_component__WEBPACK_IMPORTED_MODULE_6__","_product_type_product_type_component__WEBPACK_IMPORTED_MODULE_5__","ItemConfigComponent","add_item_config_form","type","type_tmp","console","log","get","_a","setValue","_b","id","_angular_core__WEBPACK_IMPORTED_MODULE_6__","ItemsTypeConfigComponent","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","loading","PayGoProvidersComponent","add_pay_go_form","_angular_core__WEBPACK_IMPORTED_MODULE_3__","AddPriceGroupComponent","router","location","getCurrentNavigation","extras","state","undefined","instance","newEntry","pay_go_provider","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","deposit","daily_rate","unlock_price","_c","number_of_days","_d","days_in_activation_amount","_e","min_activation_amount","_f","cash_amount","product_config_form","getDropdownValues","response","back","pay_go_providers_loading","pay_go_providers","results","minAmount","controls","unlockPrice","patchValue","decls","vars","consts","template","PriceGroupComponent","_router","navigate","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ProductTypeComponent","_modal","date","action","actions","i","push","price_group","boxes","add_product_type_form","SuppliersComponent","add_supplier_form","phone","email","contact_person","contact_phone"],"sources":["webpack:///src/app/modules/administration/inventory/boxs/boxs.component.html","webpack:///src/app/modules/administration/inventory/boxs/boxs.component.ts","webpack:///src/app/modules/administration/inventory/inventory.module.ts","webpack:///src/app/modules/administration/inventory/invetory-routing.module.ts","webpack:///src/app/modules/administration/inventory/item-config/item-config.component.html","webpack:///src/app/modules/administration/inventory/item-config/item-config.component.ts","webpack:///src/app/modules/administration/inventory/items-type-config/item-type-config.component.html","webpack:///src/app/modules/administration/inventory/items-type-config/item-type-config.component.ts","webpack:///src/app/modules/administration/inventory/pay-go-providers/pay-go-providers.component.html","webpack:///src/app/modules/administration/inventory/pay-go-providers/pay-go-providers.component.ts","webpack:///src/app/modules/administration/inventory/price-group/add-price-group/add-price-group.component.html","webpack:///src/app/modules/administration/inventory/price-group/add-price-group/add-price-group.component.ts","webpack:///src/app/modules/administration/inventory/price-group/price-group.component.ts","webpack:///src/app/modules/administration/inventory/price-group/price-group.component.html","webpack:///src/app/modules/administration/inventory/product-type/product-type.component.html","webpack:///src/app/modules/administration/inventory/product-type/product-type.component.ts","webpack:///src/app/modules/administration/inventory/suppliers/suppliers.component.html","webpack:///src/app/modules/administration/inventory/suppliers/suppliers.component.ts"],"sourcesContent":["<!-- Top Section -->\n<div class=\"row justify-content-between mb-2 pl-4\">\n    <p class=\"mb-2\">BOX CONFIGURATIONS</p>\n\n    <div>\n        <app-default-button  text=\"Add New\" class=\"mr-4\" (action)=\"openAdd()\" ></app-default-button>\n    </div>\n</div>\n\n<!--Table-->\n<app-basic-table [titles]=\"titles\" [url]=\"url\" ></app-basic-table>\n\n\n<jw-modal id=\"add-box-config\" width=\"25%\">\n  <p class=\"mb-2\">ADD BOX CONFIGURATION</p>\n\n  <form  [formGroup]=\"add_box_config_form\" (ngSubmit)=\"submitForm()\">\n       \n    <!--Name-->\n    <div>\n        <small>NAME</small>\n\n        <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"name\" />\n\n        <!-- Errors -->\n        <div\n            *ngIf=\"add_box_config_form.controls['name'].invalid && (add_box_config_form.controls['name'].dirty \n            || add_box_config_form.controls['name'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"add_box_config_form.controls['name'].errors.required\">\n            <span class=\"text-danger opt-value\">\n                Field is required <br>\n            </span>\n            </div>\n        </div>\n\n        <div *ngIf=\"api_errors.name\">\n            <span class=\"text-danger opt-value\">\n            {{api_errors.name}}\n            </span>\n        </div>\n    </div>\n\n    <div class=\"mt-4\">\n        <small>ITEM TYPES</small>\n        <app-multi-select formControlName=\"items\"></app-multi-select>\n        \n            <!-- Errors -->\n            <div\n                *ngIf=\"add_box_config_form.controls['items'].invalid && (add_box_config_form.controls['items'].dirty \n                || add_box_config_form.controls['items'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_box_config_form.controls['name'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n    \n            <div *ngIf=\"api_errors.items\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.items}}\n                </span>\n            </div>\n\n    </div>\n\n         <!---Description-->\n         <div class=\"mt-4\">\n            <small>DESCRIPTION</small>\n\n            <textarea  cols=\"4\" rows=\"8\" class=\"mt-2 form-control form-control-sm opt-value\" type=\"description\" formControlName=\"description\" >\n            </textarea>\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_box_config_form.controls['description'].invalid && (add_box_config_form.controls['description'].dirty \n                || add_box_config_form.controls['description'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_box_config_form.controls['description'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.description\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.description}}\n                </span>\n            </div>\n        </div>\n\n         <!--Submit Button-->\n         <div class=\"row justify-content-end mt-4 pr-3\">\n            <app-default-button [outline]=\"true\" text=\"Cancel\" class=\"mr-4\"(action)=\"cancel()\" ></app-default-button>\n\n            <app-default-button text=\"Submit\" ></app-default-button>\n            \n         </div>\n\n  </form>\n</jw-modal>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nimport { ModalService } from 'src/app/services/modal/modal.service';\nimport { BasicTableComponent } from 'src/app/shared/tables/basic-table/basic-table.component';\nimport { ToastNotificationsService } from 'src/app/shared/toast-notifications/toast-notifications.service';\n\n@Component({\n  selector: 'app-boxs',\n  templateUrl: './boxs.component.html',\n  styleUrls: ['./boxs.component.scss']\n})\nexport class BoxsComponent implements OnInit {\n  url : string ='box-configs/'\n\n  titles : object[] = [\n    {\n      title : 'DB ID',\n      field : 'id'\n    },\n    {\n      title : 'Name',\n      field : 'name'\n    },\n    {\n      title : 'Description',\n      field : 'description'\n    },\n    {\n      title : 'Item Count',\n      field: 'items_details.length',\n      calculated : true\n    }\n  ]\n\n  add_box_config_form : FormGroup;\n  api_errors : any = [];\n\n  @ViewChild(BasicTableComponent)\n  table : BasicTableComponent;\n\n  constructor(\n    private _modalService : ModalService,\n    private _formService : FormItemService,private _toastService : ToastNotificationsService){\n    this.add_box_config_form = new FormGroup({\n      name : new FormControl('',Validators.required),\n      description : new FormControl('',Validators.required),\n      items: new  FormControl('',Validators.required)\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  submitForm(){\n          //validate\n          this.add_box_config_form.markAllAsTouched();\n          if(this.add_box_config_form.invalid)return;\n\n\n          //submit\n          let data = {\n            url: `${this.url}`,\n            formData: this.add_box_config_form.value,\n          };\n\n          this._formService.postForm(true, data).subscribe(\n            response => {\n               this.add_box_config_form.reset();\n               this.cancel();\n               this.table.getTableData();\n            },\n            (err: HttpErrorResponse) => {\n              this._toastService.showToast(\"An Error Ocurred\", \"danger\");\n\n              this.api_errors = err.error;\n            }\n          );\n\n  }\n\n  //modal\n\n  openAdd(){\n    this._modalService.open('add-box-config')\n  }\n\n  ngOnDestroy(): void{\n    this._modalService.remove('add-box-config');\n  }\n\n  cancel():void{\n    this._modalService.close('add-box-config');\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AdministrationInvetoryRoutes } from './invetory-routing.module';\nimport { ItemsTypeConfigComponent } from './items-type-config/item-type-config.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BoxsComponent } from './boxs/boxs.component';\nimport { PriceGroupComponent } from './price-group/price-group.component';\nimport { AddPriceGroupComponent } from './price-group/add-price-group/add-price-group.component';\nimport { PayGoProvidersComponent } from './pay-go-providers/pay-go-providers.component';\nimport { SuppliersComponent } from './suppliers/suppliers.component';\nimport { ProductTypeComponent } from './product-type/product-type.component';\nimport { ItemConfigComponent } from './item-config/item-config.component';\n\n\n\n@NgModule({\n  declarations: [\n    ItemsTypeConfigComponent,\n    BoxsComponent,\n    PriceGroupComponent,\n    AddPriceGroupComponent,\n    PayGoProvidersComponent,\n    SuppliersComponent,\n    ProductTypeComponent,\n    ItemConfigComponent\n  ],\n  imports: [\n    RouterModule.forChild(AdministrationInvetoryRoutes),\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class InventoryModule { }\n","import { Routes } from \"@angular/router\";\nimport { BoxsComponent } from \"./boxs/boxs.component\";\nimport { ItemsTypeConfigComponent } from \"./items-type-config/item-type-config.component\";\nimport { PayGoProvidersComponent } from \"./pay-go-providers/pay-go-providers.component\";\nimport { AddPriceGroupComponent } from \"./price-group/add-price-group/add-price-group.component\";\nimport { PriceGroupComponent } from \"./price-group/price-group.component\";\nimport { ProductTypeComponent } from \"./product-type/product-type.component\";\nimport { SuppliersComponent } from \"./suppliers/suppliers.component\";\nimport { ItemConfigComponent } from './item-config/item-config.component'\n\n\nexport const AdministrationInvetoryRoutes :Routes = [\n    {\n        path: 'item-type-config',\n        data : { breadcrumb : 'Items Type Config'},\n        component : ItemsTypeConfigComponent\n    },\n    {\n       path : 'item-config',\n       data : { breadcrumb : 'Items Config'},\n       component : ItemConfigComponent\n    },\n    {\n        path: 'boxs',\n        data : { breadcrumb : 'Box'},\n        component : BoxsComponent\n    },\n    {\n        path: 'price-group',\n        data : { breadcrumb : 'Price Group'},\n        component : PriceGroupComponent\n    },\n    {\n        path: 'add-price-group',\n        data : { breadcrumb : 'Add Price Group'},\n        component : AddPriceGroupComponent\n    },\n    {\n        path : 'pay-go-providers',\n        data : { breadcrumb : 'Pay Go Providers'},\n        component : PayGoProvidersComponent\n    },\n    {\n        path : 'suppliers',\n        data : { breadcrumb : 'Suppliers'},\n        component : SuppliersComponent\n    },\n    {\n        path: 'product-type',\n        data : { breadcrumb : 'Product Config'},\n        component : ProductTypeComponent\n    },\n\n];","<!-- Top Section -->\n<div class=\"row justify-content-between mb-2 pl-4\">\n    <p class=\"mb-2\">ITEM CONFIGURATIONS</p>\n\n    <div>\n        <app-default-button  text=\"Add New\" class=\"mr-4\" (action)=\"openEdit()\" ></app-default-button>\n    </div>\n</div>\n\n<!--Table-->\n<app-basic-table [titles]=\"titles\" [url]=\"url\" ></app-basic-table>\n\n\n<!-- Add Item Type Modal -->\n<jw-modal id=\"add-item-config\" width=\"30%\">\n\n    <p class=\"mb-2\">ADD ITEM CONFIGURATION</p>\n \n    <form [formGroup]=\"add_item_config_form\" (ngSubmit)=\"onSubmitAdd()\" >\n        \n        <!--Item Type Name-->\n        <div>\n            <small>NAME</small>\n            <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"name\" />\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_item_config_form.controls['name'].invalid && (add_item_config_form.controls['name'].dirty \n                || add_item_config_form.controls['name'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_item_config_form.controls['name'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.name\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.name}}\n                </span>\n            </div>\n        </div>\n\n        <!-- Item Type Configuration-->\n        <div class=\"mt-4\">\n            <small>ITEM TYPE</small>\n\n            <app-multi-select formControlName=\"type_tmp\" [parameter]=\"item_type_config\"></app-multi-select>\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_item_config_form.controls['type_tmp'].invalid && (add_item_config_form.controls['type_tmp'].dirty \n                || add_item_config_form.controls['type_tmp'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_item_config_form.controls['type_tmp'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.type\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.type}}\n                </span>\n            </div>\n        </div>\n\n        <!---Description-->\n        <div class=\"mt-4\">\n            <small>DESCRIPTION</small>\n\n            <textarea  cols=\"4\" rows=\"8\" class=\"mt-2 form-control form-control-sm opt-value\" type=\"description\" formControlName=\"description\" >\n            </textarea>\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_item_config_form.controls['description'].invalid && (add_item_config_form.controls['description'].dirty \n                || add_item_config_form.controls['description'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_item_config_form.controls['description'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.description\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.description}}\n                </span>\n            </div>\n        </div>\n\n         <!--Submit Button-->\n         <div class=\"row justify-content-end mt-4 pr-3\">\n            <app-default-button [outline]=\"true\" text=\"Cancel\" class=\"mr-4\"(action)=\"cancel()\" ></app-default-button>\n\n            <app-default-button text=\"Submit\" ></app-default-button>\n            \n         </div>\n\n    </form> \n\n</jw-modal>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nimport { ModalService } from 'src/app/services/modal/modal.service';\nimport { BasicTableComponent } from 'src/app/shared/tables/basic-table/basic-table.component';\nimport { ToastNotificationsComponent } from 'src/app/shared/toast-notifications/toast-notifications.component';\nimport { ToastNotificationsService } from 'src/app/shared/toast-notifications/toast-notifications.service';\n\n@Component({\n  selector: 'app-item-config',\n  templateUrl: './item-config.component.html',\n  styleUrls: ['./item-config.component.scss']\n})\nexport class ItemConfigComponent implements OnInit {\n\n  url : string ='item-configs/'\n\n  add_item_config_form : FormGroup; \n  api_errors : any = []; \n  \n  titles : object[] = [\n    {\n      title : 'DB ID',\n      field : 'id'\n    },\n    {\n      title : 'Name',\n      field : 'name'\n    },\n    {\n      title : 'TYPE',\n      field : 'type_name'\n    },\n    {\n      title : 'Description',\n      field : 'description'\n    }\n  ]\n\n  item_type_config : any = {\n    \"type\": \"field\",\n    \"required\": true,\n    \"read_only\": false,\n    \"label\": \"Items Type\",\n    \"display_name\": \"name\",\n    \"value_field\": \"id\",\n    \"multiple\": false,\n    \"url\": `item-type-configs/`,\n    \"search_field\": \"name\",\n    \"args\": \"users\",\n    \"edit_source_field\": \"items_details\",\n    \"edit_display_name\": \"item_name\",\n    \"res_value_field\": \"item_type\",\n    \"isMap\" : false,\n    \"count\" : false\n  }\n\n  @ViewChild(BasicTableComponent)\n  table : BasicTableComponent\n\n  constructor(private _modalService : ModalService,\n    private _formService : FormItemService,private _toastService : ToastNotificationsService) {\n    \n    this.add_item_config_form = new FormGroup({\n      name : new  FormControl('',Validators.required),\n      description : new FormControl('',Validators.required),\n      type : new FormControl(''),\n      type_tmp : new FormControl('',Validators.required)\n    });\n\n   }\n\n  ngOnInit(): void {\n  }\n  \n  openEdit(){\n    this._modalService.open('add-item-config');\n  }\n\n  ngOnDestroy(): void{\n    this._modalService.remove('add-item-config');\n  }\n\n  cancel():void{\n    this._modalService.close('add-item-config');\n  }\n\n  onSubmitAdd(){\n    console.log()\n    this.add_item_config_form.markAllAsTouched()\n    if(this.add_item_config_form.invalid)return;\n    \n    this.add_item_config_form.get('type')?.setValue(this.add_item_config_form.get('type_tmp')?.value[0].id)\n\n    let data = {\n      url: this.url,\n      formData: this.add_item_config_form.value,\n    };\n\n   \n    this._formService.postForm(true, data).subscribe(\n      response => {\n      \n         this.add_item_config_form.reset();\n         this.cancel();\n         this.table.getTableData();\n      },\n      (err: HttpErrorResponse) => {\n  \n        this._toastService.showToast(\"An Error Ocurred\", \"danger\");\n        this.api_errors = err.error;\n      }\n    );\n\n  }\n}\n","<!-- Top Section -->\n<div class=\"row justify-content-between mb-2 pl-4\">\n    <p class=\"mb-2\">ITEM TYPE CONFIGURATIONS</p>\n\n    <div>\n        <app-default-button  text=\"Add New\" class=\"mr-4\" (action)=\"openEdit()\" ></app-default-button>\n    </div>\n</div>\n\n<!--Table-->\n<app-basic-table [titles]=\"titles\" [url]=\"url\" ></app-basic-table>\n\n\n<!-- Add Item Type Modal -->\n<jw-modal id=\"add-item-type-config\" width=\"30%\">\n\n    <p class=\"mb-2\">ADD ITEM TYPE CONFIGURATION</p>\n \n    <form [formGroup]=\"add_item_config_form\" (ngSubmit)=\"onSubmitAdd()\" >\n        \n        <!--Item Type Name-->\n        <div>\n            <small>NAME</small>\n            <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"name\" />\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_item_config_form.controls['name'].invalid && (add_item_config_form.controls['name'].dirty \n                || add_item_config_form.controls['name'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_item_config_form.controls['name'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.name\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.name}}\n                </span>\n            </div>\n        </div>\n\n        <!---Description-->\n        <div class=\"mt-4\">\n            <small>DESCRIPTION</small>\n\n            <textarea  cols=\"4\" rows=\"8\" class=\"mt-2 form-control form-control-sm opt-value\" type=\"description\" formControlName=\"description\" >\n            </textarea>\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_item_config_form.controls['description'].invalid && (add_item_config_form.controls['description'].dirty \n                || add_item_config_form.controls['description'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_item_config_form.controls['description'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.description\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.description}}\n                </span>\n            </div>\n        </div>\n\n         <!--Submit Button-->\n         <div class=\"row justify-content-end mt-4 pr-3\">\n            <app-default-button [outline]=\"true\" text=\"Cancel\" class=\"mr-4\"(action)=\"cancel()\" ></app-default-button>\n\n            <app-default-button text=\"Submit\" ></app-default-button>\n            \n         </div>\n\n    </form> \n\n</jw-modal>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nimport { ModalService } from 'src/app/services/modal/modal.service';\nimport { BasicTableComponent } from 'src/app/shared/tables/basic-table/basic-table.component';\nimport { ToastNotificationsService } from 'src/app/shared/toast-notifications/toast-notifications.service';\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './item-type-config.component.html',\n  styleUrls: ['./item-type-config.component.scss']\n})\nexport class ItemsTypeConfigComponent implements OnInit {\n\n    url : string ='item-type-configs/'\n    \n    titles : object[] = [\n      {\n        title : 'DB ID',\n        field : 'id'\n      },\n      {\n        title : 'NAME',\n        field : 'name'\n      },\n      {\n        title : 'Description',\n        field : 'description'\n      }\n    ]\n\n    @ViewChild(BasicTableComponent)\n    table : BasicTableComponent;\n\n    api_errors:any = [];\n    add_item_config_form : FormGroup;\n    loading = true;\n\n\n    constructor(\n      private _modalService : ModalService,\n      private _formService : FormItemService,\n      private _toastService : ToastNotificationsService\n    ){ }\n\n    ngOnInit(): void {\n      this.add_item_config_form = new FormGroup({\n        name : new FormControl('',Validators.required),\n        description : new FormControl('',Validators.required),\n        type : new FormControl('item-config',Validators.required)\n      });\n\n    }\n\n    openEdit(){\n      this._modalService.open('add-item-type-config');\n    }\n\n    ngOnDestroy(): void{\n      this._modalService.remove('add-item-type-config');\n    }\n\n    onSubmitAdd(){\n      //validate\n      this.add_item_config_form.markAllAsTouched();\n      if(this.add_item_config_form.invalid)return;\n\n      this.loading = true;\n\n      //submit\n      let data = {\n        url: `item-type-configs/`,\n        formData: this.add_item_config_form.value,\n      };\n\n     \n      this._formService.postForm(true, data).subscribe(\n        response => {\n          this.loading = false;\n           this.add_item_config_form.reset();\n           this.cancel();\n           this.table.getTableData();\n        },\n        (err: HttpErrorResponse) => {\n          this.loading = false;\n          this._toastService.showToast(\"An Error Ocurred\", \"danger\");\n        \n          this.api_errors = err.error;\n        }\n      );\n\n    }\n\n    cancel():void{\n      this._modalService.close('add-item-type-config');\n    }\n\n}\n\n\n\n","<!-- Top Section -->\n<div class=\"row justify-content-between mb-2 pl-4\">\n    <p class=\"mb-2\">PAY GO PROVIDERS </p>\n\n    <div>\n        <app-default-button  text=\"Add New\" class=\"mr-4\" (action)=\"openAdd()\" ></app-default-button>\n    </div>\n</div>\n\n<!--Table-->\n<app-basic-table [titles]=\"titles\" [url]=\"url\" ></app-basic-table>\n\n\n<!-- Add Item Type Modal -->\n<jw-modal id=\"add-pay-go\" width=\"30%\">\n\n    <p class=\"mb-2\">ADD PAY GO PROVIDER</p>\n \n    <form [formGroup]=\"add_pay_go_form\" (ngSubmit)=\"onSubmitAdd()\" >\n        \n        <!--Item Type Name-->\n        <div>\n            <small>NAME</small>\n            <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"name\" />\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_pay_go_form.controls['name'].invalid && (add_pay_go_form.controls['name'].dirty \n                || add_pay_go_form.controls['name'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_pay_go_form.controls['name'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.name\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.name}}\n                </span>\n            </div>\n        </div>\n\n        <!---Description-->\n        <div class=\"mt-4\">\n            <small>DESCRIPTION</small>\n\n            <textarea  cols=\"4\" rows=\"8\" class=\"mt-2 form-control form-control-sm opt-value\" type=\"description\" formControlName=\"description\" >\n            </textarea>\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_pay_go_form.controls['description'].invalid && (add_pay_go_form.controls['description'].dirty \n                || add_pay_go_form.controls['description'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_pay_go_form.controls['description'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.description\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.description}}\n                </span>\n            </div>\n        </div>\n\n         <!--Submit Button-->\n         <div class=\"row justify-content-end mt-4 pr-3\">\n            <app-default-button [outline]=\"true\" text=\"Cancel\" class=\"mr-4\"(action)=\"cancel()\" ></app-default-button>\n\n            <app-default-button text=\"Submit\" ></app-default-button>\n            \n         </div>\n\n    </form> \n\n</jw-modal>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nimport { ModalService } from 'src/app/services/modal/modal.service';\nimport { BasicTableComponent } from 'src/app/shared/tables/basic-table/basic-table.component';\nimport { ToastNotificationsService } from 'src/app/shared/toast-notifications/toast-notifications.service';\n\n@Component({\n  selector: 'app-pay-go-providers',\n  templateUrl: './pay-go-providers.component.html',\n  styleUrls: ['./pay-go-providers.component.scss']\n})\nexport class PayGoProvidersComponent implements OnInit {\n  \n  add_pay_go_form : FormGroup;\n  api_errors : any = [];\n\n  url: string = 'pay-go-providers/'\n  \n  titles : any[] = [\n    {\n      title : 'Name',\n      field : 'name'\n    },\n    {\n      title : 'Description',\n      field : 'description'\n    }\n  ];\n   \n  @ViewChild(BasicTableComponent)\n  table : BasicTableComponent;\n\n  constructor(private  _formService : FormItemService, \n   private  _toastService : ToastNotificationsService,\n   private _modalService : ModalService\n   ) {\n    this.add_pay_go_form = new FormGroup({\n      name : new FormControl('',Validators.required),\n      description : new FormControl('',Validators.required),\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmitAdd(){\n       //validate\n       this.add_pay_go_form.markAllAsTouched();\n       if(this.add_pay_go_form.invalid)return;\n \n \n       //submit\n       let data = {\n         url: this.url,\n         formData: this.add_pay_go_form.value,\n       };\n \n      \n       this._formService.postForm(true, data).subscribe(\n         response => {\n            this.add_pay_go_form.reset();\n            this.cancel();\n            this.table.getTableData();\n         },\n         (err: HttpErrorResponse) => {\n\n           this._toastService.showToast(\"An Error Ocurred\", \"danger\");\n         \n           this.api_errors = err.error;\n         }\n       );\n  }\n\n  openAdd(){\n    this._modalService.open('add-pay-go');\n  }\n\n  cancel(){\n    this._modalService.close('add-pay-go');\n  }\n\n}\n","<p class=\"mb-2\">INVENTORY - ADD PRICE GROUPS</p>\n\n<app-card>\n    <form action=\"form-group\" [formGroup]=\"product_config_form\" (ngSubmit)=\"onSubmit()\">\n     \n        <!-- first row -->\n         <div class=\"row justify-content-start\">\n\n             <div class=\"col-2\">\n                     <!-- Field -->\n                    <small>Pay Go Provider</small>\n                    <select class=\"form-control mt-2 mt-2  opt-value\" formControlName=\"pay_go_provider\" *ngIf=\"!pay_go_providers_loading\">\n                        <option *ngFor=\"let provider of pay_go_providers\" value=\"{{provider.id}}\" required>{{provider.name}}</option>\n                    </select>\n                    <!-- Loader -->\n                    <span class=\"linear-background\" *ngIf=\"pay_go_providers_loading\"></span>\n                    <!-- Errors -->\n                    <div\n                        *ngIf=\"product_config_form.controls['pay_go_provider'].invalid && \n                        (product_config_form.controls['pay_go_provider'].dirty || product_config_form.controls['pay_go_provider'].touched)\"\n                        class=\"alert\">\n                        <div *ngIf=\"product_config_form.controls['pay_go_provider'].errors.required\">\n                        <span class=\"text-danger opt-value\">\n                            Field is required <br>\n                        </span>\n                        </div>\n                    </div>\n                    <div *ngIf=\"api_errors.pay_go_provider\">\n\n                        <span class=\"text-danger opt-value\">\n                        {{api_errors.pay_go_provider}}\n                        </span>\n                    </div>\n             </div>\n\n             <div class=\"col-2\">\n                <!-- Field -->\n               <small>Type </small>\n               <select class=\"form-control mt-2 mt-2  opt-value\" formControlName=\"type\">\n                   <option *ngFor=\"let type of types\" value=\"{{type.value}}\" required>{{type.name}}</option>\n               </select>\n\n               <!-- Errors -->\n               <div\n                   *ngIf=\"product_config_form.controls['type'].invalid && (product_config_form.controls['type'].dirty ||\n                    product_config_form.controls['type'].touched)\"\n                   class=\"alert\">\n                   <div *ngIf=\"product_config_form.controls['type'].errors.required\">\n                   <span class=\"text-danger opt-value\">\n                       Field is required <br>\n                   </span>\n                   </div>\n               </div>\n               <div *ngIf=\"api_errors.type\">\n\n                   <span class=\"text-danger opt-value\">\n                   {{api_errors.type}}\n                   </span>\n               </div>\n            </div>\n\n            <div class=\"col-2\">\n                <!-- Purchase Order -->\n                <!-- Field -->\n                <small>Name</small>\n                <input class=\"form-control mt-2 mt-2  opt-value\" formControlName=\"name\" required />\n      \n                <!-- Validation Errors -->\n                <div\n                  *ngIf=\"product_config_form.controls['name'].invalid && (product_config_form.controls['name'].dirty || product_config_form.controls['name'].touched)\"\n                  class=\"alert\">\n                  <div *ngIf=\"product_config_form.controls['name'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field is required <br>\n                    </span>\n                  </div>\n                </div>\n                <div *ngIf=\"api_errors.name\">\n      \n                  <span class=\"text-danger opt-value\">\n                    {{api_errors.name}}\n                  </span>\n                </div>\n              </div>\n\n         </div>  \n\n         <!-- second row -->\n         <div  *ngIf=\"product_config_form.controls['type'].value != 'C'\" class=\"row justify-content-start mt-4\">\n            <div class=\"col-2\">\n                <!-- Item Count Field -->\n                <!-- Field -->\n                <small>Deposit</small>\n                <input type=\"number\" class=\"form-control mt-2 mt-2 \" formControlName=\"deposit\" (ngModelChange)=\"calculate()\" />\n      \n                <div\n                  *ngIf=\"product_config_form.controls['deposit'].invalid && (product_config_form.controls['deposit'].dirty || product_config_form.controls['deposit'].touched)\"\n                  class=\"alert\">\n                  <div *ngIf=\"product_config_form.controls['deposit'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field is required <br>\n                    </span>\n                  </div>\n                  <div *ngIf=\"product_config_form.controls['deposit'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field has to be a number <br>\n                    </span>\n                  </div>\n                </div>\n      \n                <div *ngIf=\"api_errors.deposit\">\n      \n                  <span class=\"text-danger opt-value\">\n                    {{api_errors.deposit}}\n                  </span>\n                </div>\n              </div>\n\n              <div class=\"col-2\">\n                <!-- Item Count Field -->\n                <!-- Field -->\n                <small>No. Of Days</small>\n                <input type=\"number\" class=\"form-control mt-2 \" formControlName=\"number_of_days\" (ngModelChange)=\"calculate()\" />\n      \n                <div\n                  *ngIf=\"product_config_form.controls['number_of_days'].invalid && (product_config_form.controls['number_of_days'].dirty || product_config_form.controls['number_of_days'].touched)\"\n                  class=\"alert\">\n                  <div *ngIf=\"product_config_form.controls['number_of_days'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field is required <br>\n                    </span>\n                  </div>\n                  <div *ngIf=\"product_config_form.controls['number_of_days'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field has to be a number <br>\n                    </span>\n                  </div>\n                </div>\n      \n                <div *ngIf=\"api_errors.number_of_days\">\n      \n                  <span class=\"text-danger opt-value\">\n                    {{api_errors.number_of_days}}\n                  </span>\n                </div>\n              </div>\n\n              <div class=\"col-2\" >\n                <!-- Item Count Field -->\n                <!-- Field -->\n                <small>Daily Rate </small>\n                <input type=\"number\" class=\"form-control mt-2 \" formControlName=\"daily_rate\" (ngModelChange)=\"calculate()\" />\n      \n                <div\n                  *ngIf=\"product_config_form.controls['daily_rate'].invalid && (product_config_form.controls['daily_rate'].dirty || product_config_form.controls['daily_rate'].touched)\"\n                  class=\"alert\">\n                  <div *ngIf=\"product_config_form.controls['daily_rate'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field is required <br>\n                    </span>\n                  </div>\n                  <div *ngIf=\"product_config_form.controls['daily_rate'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field has to be a number <br>\n                    </span>\n                  </div>\n                </div>\n      \n                <div *ngIf=\"api_errors.daily_rate\">\n      \n                  <span class=\"text-danger opt-value\">\n                    {{api_errors.daily_rate}}\n                  </span>\n                </div>\n              </div>\n\n      \n\n         </div>\n\n         <!-- third rows -->\n         <div *ngIf=\"product_config_form.controls['type'].value != 'C'\" class=\"row justify-content-start mt-4\">\n          \n\n              <div class=\"col-2\" >\n                <!-- Item Count Field -->\n                <!-- Field -->\n                <small>Days To Activate </small>\n                <input type=\"number\" (ngModelChange)=\"calculate()\" class=\"form-control mt-2 \" formControlName=\"days_in_activation_amount\" />\n      \n                <div\n                  *ngIf=\"product_config_form.controls['days_in_activation_amount'].invalid && (product_config_form.controls['days_in_activation_amount'].dirty || product_config_form.controls['days_in_activation_amount'].touched)\"\n                  class=\"alert\">\n                  <div *ngIf=\"product_config_form.controls['days_in_activation_amount'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field is required <br>\n                    </span>\n                  </div>\n                  <div *ngIf=\"product_config_form.controls['days_in_activation_amount'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field has to be a number <br>\n                    </span>\n                  </div>\n                </div>\n      \n                <div *ngIf=\"api_errors.days_in_activation_amount\">\n      \n                  <span class=\"text-danger opt-value\">\n                    {{api_errors.days_in_activation_amount}}\n                  </span>\n                </div>\n              </div>\n\n              <div class=\"col-2\" >\n                <!-- Item Count Field -->\n                <!-- Field -->\n                <small>Min Activation Amount </small>\n                <input type=\"number\" class=\"form-control mt-2 \" formControlName=\"min_activation_amount\" readonly/>\n      \n                <div\n                  *ngIf=\"product_config_form.controls['min_activation_amount'].invalid && (product_config_form.controls['min_activation_amount'].dirty || product_config_form.controls['min_activation_amount'].touched)\"\n                  class=\"alert\">\n                  <div *ngIf=\"product_config_form.controls['min_activation_amount'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field is required <br>\n                    </span>\n                  </div>\n                  <div *ngIf=\"product_config_form.controls['min_activation_amount'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field has to be a number <br>\n                    </span>\n                  </div>\n                </div>\n      \n                <div *ngIf=\"api_errors.min_activation_amount\">\n      \n                  <span class=\"text-danger opt-value\">\n                    {{api_errors.min_activation_amount}}\n                  </span>\n                </div>\n              </div>  \n              \n              <div class=\"col-2\">\n                <!-- Item Count Field -->\n                <!-- Field -->\n                <small>Unlock Price </small>\n                <input type=\"number\" class=\"form-control mt-2 \" formControlName=\"unlock_price\" readonly />\n      \n                <div\n                  *ngIf=\"product_config_form.controls['unlock_price'].invalid && (product_config_form.controls['unlock_price'].dirty || product_config_form.controls['unlock_price'].touched)\"\n                  class=\"alert\">\n                  <div *ngIf=\"product_config_form.controls['unlock_price'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field is required <br>\n                    </span>\n                  </div>\n                  <div *ngIf=\"product_config_form.controls['unlock_price'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field has to be a number <br>\n                    </span>\n                  </div>\n                </div>\n      \n                <div *ngIf=\"api_errors.unlock_price\">\n      \n                  <span class=\"text-danger opt-value\">\n                    {{api_errors.unlock_price}}\n                  </span>\n                </div>\n              </div>\n         </div>\n\n         <!-- row three -->\n         <div class=\"row justify-content-start mt-4\">\n            <div class=\"col-2\">\n                <!-- Item Count Field -->\n                <!-- Field -->\n                <small>Cash Amount</small>\n                <input type=\"number\" class=\"form-control mt-2 \" formControlName=\"cash_amount\" />\n      \n                <div\n                  *ngIf=\"product_config_form.controls['cash_amount'].invalid && (product_config_form.controls['cash_amount'].dirty || product_config_form.controls['cash_amount'].touched)\"\n                  class=\"alert\">\n                  <div *ngIf=\"product_config_form.controls['cash_amount'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field is required <br>\n                    </span>\n                  </div>\n                  <div *ngIf=\"product_config_form.controls['cash_amount'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field has to be a number <br>\n                    </span>\n                  </div>\n                </div>\n      \n                <div *ngIf=\"api_errors.cash_amount\">\n      \n                  <span class=\"text-danger opt-value\">\n                    {{api_errors.cash_amount}}\n                  </span>\n                </div>\n              </div>\n         </div>\n\n         <div class=\"row justify-content-start\">\n             <div class=\"col-8\">\n                <small>Description</small>\n                <textarea name=\"description\" class=\"form-control mt-2 \" formControlName=\"description\" \n                  cols=\"30\" rows=\"5\"></textarea>\n\n                  <div\n                  *ngIf=\"product_config_form.controls['description'].invalid && \n                  (product_config_form.controls['description'].dirty || product_config_form.controls['description'].touched)\"\n                  class=\"alert\">\n                  <div *ngIf=\"product_config_form.controls['description'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                      Field is required <br>\n                    </span>\n                  </div>\n                </div>\n      \n                <div *ngIf=\"api_errors.description\">\n      \n                  <span class=\"text-danger opt-value\">\n                    {{api_errors.description}}\n                  </span>\n                </div>\n             </div> \n         </div>\n\n                 <!--Submit Button-->\n        <div class=\"row justify-content-end\">\n            <app-default-button [outline]=\"true\" text=\"Cancel\" class=\"mr-4\"(action)=\"clearForm()\" ></app-default-button>\n            <app-default-button text=\"Submit\" ></app-default-button>\n          \n     </div>\n\n\n\n</form>\n</app-card>","import { Location } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\n\n@Component({\n  selector: 'app-add-price-group',\n  templateUrl: './add-price-group.component.html',\n  styleUrls: ['./add-price-group.component.scss']\n})\nexport class AddPriceGroupComponent implements OnInit {\n\n\n  page_title = 'Add Price Group Configuration'\n  newEntry: boolean = true;\n  product_config_form: any;\n  pay_go_providers: any;\n\n\n  types : any[]  =  [\n    {\n      name : 'Installment',\n      value :'I'\n    },\n    {\n     name : 'Cash',\n     value :'C'\n    }\n  ];\n\n  pay_go_providers_loading: boolean = true;\n  instance: any = {};\n  api_errors: any = [];\n \n\n  constructor( private router : Router,\n    private _formService: FormItemService,private location: Location){\n   \n   let data = this.router.getCurrentNavigation()!.extras.state;\n   if(data != undefined && data != null){\n     this.instance = data.data;\n     this.newEntry = false;\n   }\n\n   const pay_go_provider = new FormControl(this.newEntry ? '' : this.instance.pay_go_provider, Validators.required);\n   const type = new FormControl(this.newEntry ? '' : this.instance.type,Validators.required);\n   const name = new FormControl(this.newEntry ? '' : this.instance.name,Validators.required);\n   const deposit = new FormControl(this.newEntry ? '0' : (this.instance.deposit ?? 0),Validators.required);\n   const daily_rate = new FormControl(this.newEntry ? '0' : (this.instance.daily_rate ?? 0),Validators.required);\n   const unlock_price = new FormControl(this.newEntry ? '0' : (this.instance.unlock_price ?? 0),Validators.required);\n   const number_of_days = new FormControl(this.newEntry ? '0' : (this.instance.number_of_days ?? 0),Validators.required);\n   const days_in_activation_amount = new FormControl(this.newEntry ? '0' : (this.instance.days_in_activation_amount ?? 0),Validators.required);\n   const min_activation_amount = new FormControl(this.newEntry ? '0' : (this.instance.min_activation_amount ?? 0),Validators.required);\n   const cash_amount = new FormControl(this.newEntry ? '' : this.instance.cash_amount ,Validators.required);\n   const description = new FormControl(this.newEntry ? '' : this.instance.description,Validators.required);\n\n   this.product_config_form = new FormGroup({\n     name : name,\n     description : description,\n     type : type,\n     deposit :deposit,\n     unlock_price : unlock_price,\n     daily_rate : daily_rate,\n     number_of_days : number_of_days,\n     days_in_activation_amount :days_in_activation_amount,\n     min_activation_amount:min_activation_amount,\n     cash_amount:cash_amount,\n     pay_go_provider : pay_go_provider,\n   })\n\n  }\n\n\n ngOnInit(){\n    this.getDropdownValues();\n }\n\n onSubmit(){\n     //reset API errors\n   this.api_errors = [];\n   let data = {\n     url: this.newEntry == true ? `price-group-configs/` :\n      `price-group-configs/${this.instance.id}/`,\n     formData: this.product_config_form.value\n   }\n   console.log(data);\n   this._formService.postForm(this.newEntry, data).subscribe(response => {\n     console.log(response);\n     this.product_config_form.reset();\n     this.location.back();\n   }, (err: HttpErrorResponse) => {\n\n     this.api_errors = err.error;\n\n   })\n\n }\n\n getDropdownValues() {\n   this._formService.getDropdownValues('pay-go-providers').subscribe( (data) => {\n      this.pay_go_providers_loading = false;\n      this.pay_go_providers = data.results;\n   },err => {\n     this.pay_go_providers_loading = false;\n   })\n }\n\n calculate(){\n   \n   //get min activation\n   let minAmount =  this.product_config_form.controls['deposit'].value + (this.product_config_form.controls['days_in_activation_amount'].value * this.product_config_form.controls['daily_rate'].value);\n   \n   //get unlock price\n   let unlockPrice = this.product_config_form.controls['deposit'].value + ( this.product_config_form.controls['number_of_days'].value * this.product_config_form.controls['daily_rate'].value );\n   \n   //set values\n   this.product_config_form.patchValue({\n     min_activation_amount: minAmount, \n     unlock_price: unlockPrice\n   });\n\n\n }\n\n //Reset Form\n clearForm() {\n   this.newEntry = false;\n   this.product_config_form.reset();\n }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-price-group',\n  templateUrl: './price-group.component.html',\n  styleUrls: ['./price-group.component.scss']\n})\nexport class PriceGroupComponent implements OnInit {\n\n\n  url : string ='price-group-configs/'\n    \n  titles : object[] = [\n    {\n      title : 'DB ID',\n      field : 'id'\n    },\n    {\n      title : 'Name',\n      field : 'name'\n    },\n    {\n      title : 'Type',\n      field : 'type'\n    },   \n    {\n      title : 'Daily Rate',\n      field : 'daily_rate'\n    },\n    {\n      title : 'Number of Days',\n      field : 'number_of_days'\n    },\n    {\n      title : 'Min activation amount',\n      field : 'min_activation_amount'\n    },\n    {\n      title : 'Description',\n      field : 'description'\n    },\n    {\n      title : 'PayGo Provider Name',\n      field : 'pay_go_provider_name'\n    }\n    \n  ]\n  \n  constructor(private _router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  openAdd(){\n    this._router.navigate(['/administration/inventory/add-price-group'])\n  }\n\n}\n","<!-- Top Section -->\n<div class=\"row justify-content-between mb-2 pl-4\">\n    <p class=\"mb-2\">PRICE GROUPS</p>\n\n    <div>\n        <app-default-button  text=\"Add New\" class=\"mr-4\" (action)=\"openAdd()\" ></app-default-button>\n    </div>\n</div>\n\n<!--Table-->\n<app-basic-table [titles]=\"titles\" [url]=\"url\" ></app-basic-table>\n\n","<!-- Top Section -->\n<div class=\"row justify-content-between mb-2 pl-4\">\n    <p class=\"mb-2\"> PRODUCT CONFIGURATION </p>\n\n    <div class=\"row\">\n        <app-default-button  text=\"Add New\" class=\"mr-4\" (action)=\"openAdd()\" ></app-default-button>\n        \n        <app-default-button text=\"Bulk Actions\" class=\"mr-4\"></app-default-button>\n    </div>\n</div>\n\n<!--Table-->\n<app-basic-table [titles]=\"titles\" [url]=\"url\" [data]=\"data\"></app-basic-table>\n\n<!-- Add Item Type Modal -->\n<jw-modal id=\"add-product-type\" width=\"25%\">\n    <p class=\"mb-2\">ADD PRODUCT CONFIGURATION</p>\n\n   <form [formGroup]=\"add_product_type_form\" (ngSubmit)=\"onSubmitAdd()\">\n    \n    <!--Name-->\n    <div>\n        <small>NAME</small>\n\n        <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"name\" />\n\n        <!-- Errors -->\n        <div\n            *ngIf=\"add_product_type_form.controls['name'].invalid && (add_product_type_form.controls['name'].dirty \n            || add_product_type_form.controls['name'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"add_product_type_form.controls['name'].errors.required\">\n            <span class=\"text-danger opt-value\">\n                Field is required <br>\n            </span>\n            </div>\n        </div>\n\n        <div *ngIf=\"api_errors.name\">\n            <span class=\"text-danger opt-value\">\n            {{api_errors.name}}\n            </span>\n        </div>\n    </div>\n\n     <!--PRICE GROUP-->\n     <div class=\"mt-3\">\n        <small>PRICE GROUP</small>\n\n        <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"price_group\" />\n\n        <!-- Errors -->\n        <div\n            *ngIf=\"add_product_type_form.controls['price_group'].invalid && (add_product_type_form.controls['price_group'].dirty \n            || add_product_type_form.controls['price_group'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"add_product_type_form.controls['price_group'].errors.required\">\n            <span class=\"text-danger opt-value\">\n                Field is required <br>\n            </span>\n            </div>\n        </div>\n\n        <div *ngIf=\"api_errors.price_group\">\n            <span class=\"text-danger opt-value\">\n            {{api_errors.price_group}}\n            </span>\n        </div>\n    </div>\n    \n    <!--Boxes-->\n    <div class=\"mt-4\">\n        <small>BOXES</small>\n        <app-multi-select [parameter]=\"box_parameter\" formControlName=\"boxes\" class=\"mt-2\" ></app-multi-select>\n        \n            <!-- Errors -->\n            <div\n                *ngIf=\"add_product_type_form.controls['boxes'].invalid && (add_product_type_form.controls['boxes'].dirty \n                || add_product_type_form.controls['boxes'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_product_type_form.controls['boxes'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n    \n            <div *ngIf=\"api_errors.boxes\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.boxes}}\n                </span>\n            </div>\n\n    </div>\n\n         <!--DATE-->\n         <div class=\"mt-3\">\n            <small>DATE</small>\n    \n            <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"date\" type=\"date\" />\n    \n            <!-- Errors -->\n            <div\n                *ngIf=\"add_product_type_form.controls['date'].invalid && (add_product_type_form.controls['date'].dirty \n                || add_product_type_form.controls['date'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_product_type_form.controls['date'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n    \n            <div *ngIf=\"api_errors.date\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.date}}\n                </span>\n            </div>\n        </div>\n\n         <!---Description-->\n         <div class=\"mt-3\">\n            <small>DESCRIPTION</small>\n\n            <textarea  cols=\"4\" rows=\"8\" class=\"mt-2 form-control form-control-sm opt-value\" type=\"description\" formControlName=\"description\" >\n            </textarea>\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_product_type_form.controls['description'].invalid && (add_product_type_form.controls['description'].dirty \n                || add_product_type_form.controls['description'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_product_type_form.controls['description'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.description\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.description}}\n                </span>\n            </div>\n        </div>\n\n\n     <!--Submit Button-->\n     <div class=\"row justify-content-end mt-4 pr-3\">\n        <app-default-button [outline]=\"true\" text=\"Cancel\" class=\"mr-4\"(action)=\"cancel()\" ></app-default-button>\n\n        <app-default-button text=\"Submit\" (action)=\"onSubmitAdd()\" ></app-default-button>\n        \n     </div>\n   </form>\n    \n\n</jw-modal>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nimport { ModalService } from 'src/app/services/modal/modal.service';\nimport { BasicTableComponent } from 'src/app/shared/tables/basic-table/basic-table.component';\nimport { ToastNotificationsService } from 'src/app/shared/toast-notifications/toast-notifications.service';\n\n@Component({\n  selector: 'app-product-type',\n  templateUrl: './product-type.component.html',\n  styleUrls: ['./product-type.component.scss']\n})\nexport class ProductTypeComponent implements OnInit {\n  url : string = \"\";\n  api_errors : any = [];\n\n  add_product_type_form: FormGroup;\n\n  data : any[] = [\n    \n  ];\n\n  titles: any[] = [\n    {\n      title : 'ID',\n      field : 'id'\n    },\n    {\n      title: 'NAME',\n      field : 'name'\n    },\n    {\n      title: 'PRICE GROUP',\n      field : 'price_group'\n    },\n    {\n      title: 'Boxes',\n      field : 'boxes'\n    },\n    {\n      title: 'DATE',\n      field : 'date',\n      date : true\n    },\n    {\n      title: 'Description',\n      field : 'description'\n    },\n    {\n      title : \"Actions\",\n      field : \"\",\n      action: true,\n      actions: [\n        \"EDIT\",\n        \"ARCHIVE\",\n      ]\n    }\n  ];\n  \n  box_parameter : any = {\n    \"type\": \"field\",\n    \"required\": true,\n    \"read_only\": false,\n    \"label\": \"Boxes\",\n    \"display_name\": \"name\",\n    \"value_field\": \"id\",\n    \"multiple\": true,\n    \"url\": `box-configs/`,\n    \"search_field\": \"name\",\n    \"args\": \"users\",\n    \"edit_source_field\": \"boxes\",\n    \"edit_display_name\": \"box_name\",\n    \"res_value_field\": \"box_config\",\n    \"isMap\" : true\n  };\n\n  \n  @ViewChild(BasicTableComponent)\n  table : BasicTableComponent;\n\n\n  constructor(private _formService : FormItemService,\n    private _modalService : ModalService,\n    private _toastService : ToastNotificationsService,\n    private _modal : ModalService ) {\n       for(let i =0; i< 20;i++){\n          this.data.push({\n            id : 4,\n            name : 'Tv Product',\n            price_group : 'A',\n            boxes : 'TV Box , Solar Box',\n            date : '08-11-2020',\n            description: 'Tv Product'\n          });\n       }\n\n       this.add_product_type_form = new FormGroup(\n         {\n          name : new FormControl('',Validators.required),\n          price_group : new FormControl('',Validators.required),\n          boxes : new FormControl('',Validators.required),\n          date : new FormControl('',Validators.required),\n          description: new FormControl('',Validators.required)\n         }\n       )\n    }\n\n\n  ngOnInit(): void {\n  }\n\n  onSubmitAdd(){\n    console.log(\"VALUES\");\n   console.log(this.add_product_type_form.value)\n  }\n\n  openAdd(){\n    this._modalService.open('add-product-type');\n  }\n\n  cancel(){\n    this._modalService.close('add-product-type');\n  }  \n\n}\n","<!-- Top Section -->\n<div class=\"row justify-content-between mb-2 pl-4\">\n    <p class=\"mb-2\">SUPPLIERS</p>\n\n    <div>\n        <app-default-button  text=\"Add New\" class=\"mr-4\" (action)=\"openAdd()\" ></app-default-button>\n    </div>\n</div>\n\n<!--Table-->\n<app-basic-table [titles]=\"titles\" [url]=\"url\" ></app-basic-table>\n\n\n<!-- Add Item Type Modal -->\n<jw-modal id=\"add-supplier-form\" width=\"30%\">\n\n    <p class=\"mb-2\">ADD SUPPLIER</p>\n \n    <form [formGroup]=\"add_supplier_form\" (ngSubmit)=\"onSubmitAdd()\" >\n        \n        <!--Item Type Name-->\n        <div>\n            <small>NAME</small>\n            <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"name\" />\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_supplier_form.controls['name'].invalid && (add_supplier_form.controls['name'].dirty \n                || add_supplier_form.controls['name'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_supplier_form.controls['name'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.name\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.name}}\n                </span>\n            </div>\n        </div>\n        \n        <!--Phone-->\n        <div class=\"mt-2\">\n            <small>PHONE</small>\n            <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"phone\" />\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_supplier_form.controls['phone'].invalid && (add_supplier_form.controls['phone'].dirty \n                || add_supplier_form.controls['phone'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_supplier_form.controls['phone'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.phone\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.phone}}\n                </span>\n            </div>\n        </div>\n\n        <!--Email-->\n        <div class=\"mt-2\">\n            <small>EMAIL</small>\n            <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"email\" />\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_supplier_form.controls['email'].invalid && (add_supplier_form.controls['email'].dirty \n                || add_supplier_form.controls['email'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_supplier_form.controls['email'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.email\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.email}}\n                </span>\n            </div>\n        </div>\n\n               <!--Email-->\n        <div class=\"mt-2\">\n            <small>CONTACT PERSON</small>\n            <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"contact_person\" />\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_supplier_form.controls['contact_person'].invalid && (add_supplier_form.controls['contact_person'].dirty \n                || add_supplier_form.controls['contact_person'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_supplier_form.controls['contact_person'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.contact_person\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.contact_person}}\n                </span>\n            </div>\n        </div>\n\n        <div class=\"mt-2\">\n            <small>CONTACT PHONE</small>\n            <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"contact_phone\" />\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_supplier_form.controls['contact_phone'].invalid && (add_supplier_form.controls['contact_phone'].dirty \n                || add_supplier_form.controls['contact_phone'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_supplier_form.controls['contact_phone'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.contact_phone\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.contact_phone}}\n                </span>\n            </div>\n        </div>\n    \n\n         <!--Submit Button-->\n         <div class=\"row justify-content-end mt-4 pr-3\">\n            <app-default-button [outline]=\"true\" text=\"Cancel\" class=\"mr-4\"(action)=\"cancel()\" ></app-default-button>\n\n            <app-default-button text=\"Submit\" ></app-default-button>\n            \n         </div>\n\n    </form> \n\n</jw-modal>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nimport { ModalService } from 'src/app/services/modal/modal.service';\nimport { BasicTableComponent } from 'src/app/shared/tables/basic-table/basic-table.component';\nimport { ToastNotificationsService } from 'src/app/shared/toast-notifications/toast-notifications.service';\n\n@Component({\n  selector: 'app-suppliers',\n  templateUrl: './suppliers.component.html',\n  styleUrls: ['./suppliers.component.scss']\n})\nexport class SuppliersComponent implements OnInit {\n  \n  url : string = \"suppliers/\";\n\n  titles : any[] = [\n    {\n      title : \"ID\",\n      field : \"id\"\n    },\n    {\n      title : \"Supplier Name\",\n      field : \"name\"\n    },\n    {\n      title : \"Phone\",\n      field : \"phone\"\n    },\n    {\n      title : \"Email\",\n      field : \"email\"\n    },\n    {\n      title : \"Contact Person\",\n      field : \"contact_person\"\n    },\n    {\n      title : \"Contact Phone\",\n      field : \"contact_phone\"\n    }\n  ];\n\n  add_supplier_form : FormGroup;\n  api_errors : any = [];\n\n  @ViewChild(BasicTableComponent)\n  table : BasicTableComponent;\n\n  constructor(private _modalService : ModalService,\n    private _formService : FormItemService,\n    private _toastService : ToastNotificationsService) {\n    this.add_supplier_form = new FormGroup({\n      name : new FormControl('',Validators.required),\n      phone : new FormControl('',Validators.required),\n      email : new FormControl('',Validators.required),\n      contact_person : new FormControl('',Validators.required),\n      contact_phone : new FormControl('',Validators.required),\n\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n  \n  onSubmitAdd(){\n      //validate\n      this.add_supplier_form.markAllAsTouched();\n      if(this.add_supplier_form.invalid)return;\n\n\n      //submit\n      let data = {\n        url: this.url,\n        formData: this.add_supplier_form.value,\n      };\n\n     \n      this._formService.postForm(true, data).subscribe(\n        response => {\n           this.add_supplier_form.reset();\n           this.cancel();\n           this.table.getTableData();\n        },\n        (err: HttpErrorResponse) => {\n          this._toastService.showToast(\"An Error Ocurred\", \"danger\");\n        \n          this.api_errors = err.error;\n        }\n      );\n  }\n\n  openAdd(){\n    this._modalService.open('add-supplier-form');\n  }\n  cancel(){\n    this._modalService.close('add-supplier-form');\n  }\n}\n"]}