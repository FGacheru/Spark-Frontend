{"version":3,"file":"src_app_modules_administration_repair_repair_module_ts-es2015.js","mappings":"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","sources":["./src/app/modules/administration/repair/reapir-routing.module.ts","./src/app/modules/administration/repair/repair.module.ts","./src/app/modules/administration/repair/spare-part-type/spare-part-type.component.ts","./src/app/modules/administration/repair/spare-part-type/spare-part-type.component.html"],"sourcesContent":["import { Routes } from \"@angular/router\";\nimport { SparePartTypeComponent } from \"./spare-part-type/spare-part-type.component\";\n\nexport const AdministrationRepairRoutes : Routes = [\n    {\n        path: 'spare-part-types',\n        data : { breadcrumb : 'Spare Parts'},\n        component : SparePartTypeComponent\n    },\n];","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SparePartTypeComponent } from './spare-part-type/spare-part-type.component';\nimport { RouterModule } from '@angular/router';\nimport { AdministrationRepairRoutes } from './reapir-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    SparePartTypeComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdministrationRepairRoutes),\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModule\n  ]\n})\nexport class RepairModule { }\n","import { Component, ViewChild, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nimport { ModalService } from 'src/app/services/modal/modal.service';\nimport { BasicTableComponent } from 'src/app/shared/tables/basic-table/basic-table.component';\nimport { ToastNotificationsService } from 'src/app/shared/toast-notifications/toast-notifications.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n@Component({\n  selector: 'app-spare-part-type',\n  templateUrl: './spare-part-type.component.html',\n  styleUrls: ['./spare-part-type.component.scss']\n})\nexport class SparePartTypeComponent implements OnInit {\n  url : string = \"spareparts/\";\n  api_errors : any = [];\n\n  add_spare_type_form: FormGroup;\n\n  data : any[] = [];\n\n    @Output()\n  closeAction  : EventEmitter<any> = new EventEmitter();\n  \n  @Output()\n  tableAction  : EventEmitter<any> = new EventEmitter();\n\n  titles: any[] = [\n    {\n      title: 'PART CODE',\n      field : 'part_code'\n    },\n    {\n      title: 'SUPPLIER NAME',\n      field : 'supplier.name'\n    },\n    {\n      title: 'PART DESCRIPTION',\n      field : 'description'\n    },\n    {\n      title: 'COMMENT',\n      field : 'comment'\n    },\n    {\n      title: 'RE-ORDER LEVEL',\n      field : 're_order_level'\n    }\n  ];\n\n  suppliers : any[] = [];\n  \n  supplier_loading = true;\n\n  @ViewChild(BasicTableComponent)\n  table : BasicTableComponent;\n\n\n  constructor(private _formService : FormItemService,\n    private _modalService : ModalService,private _toastService : ToastNotificationsService,\n    private _modal : ModalService ) {\n        \n         this.add_spare_type_form = new FormGroup({\n            part_code : new FormControl('',Validators.required),\n            supplier :new FormControl('',Validators.required),\n            description : new FormControl('',Validators.required),\n            comment : new FormControl('',Validators.required),\n            re_order_level : new FormControl('',Validators.required) \n         });\n\n             //get suppliers\n    this._formService.getDropdownValues(`suppliers/`).subscribe(\n      response => {\n        this.supplier_loading = false;\n        this.suppliers = response.results;\n      },\n      err => {\n        this.supplier_loading = false;\n      }\n    );\n    }\n\n  ngOnInit(): void {\n\n  }\n\n  reloadTable(){\n    this.table.getTableData();\n  }\n\n  onSubmitAdd(){\n\n    if(this.add_spare_type_form.invalid){\n      console.log(this.add_spare_type_form.errors);\n    }\n    \n    console.log(this.add_spare_type_form.value);\n    let data : any = {\n     url : 'spareparts/',\n     formData : this.add_spare_type_form.value\n    };\n  \n   this._formService.postForm(true,data).subscribe(\n     response => {\n       this.cancel();\n       this._toastService.showToast(\"SPARE PART CREATED SUCCESSFULLY!\", \"success\");\n       this.tableAction.emit();\n     },\n     (err: HttpErrorResponse) => {\n       this._toastService.showToast(\"An Error Ocurred\", \"danger\");\n     }\n     );\n\n  }\n\n  openAdd(){\n    this._modalService.open('add-spare-part');\n  }\n\n  cancel(){\n    this._modalService.close('add-spare-part');\n  }  \n\n}\n","<!-- Top Section -->\n<div class=\"row justify-content-between mb-2 pl-4\">\n    <p class=\"mb-2\"> SPARE PART TYPE </p>\n\n    <div>\n        <app-default-button  text=\"Add New\" class=\"mr-4\" (action)=\"openAdd()\" ></app-default-button>\n    </div>\n</div>\n\n<!--Table-->\n<app-basic-table [titles]=\"titles\" [url]=\"url\" [data]=\"data\"  ></app-basic-table>\n\n\n<!-- Add Item Type Modal -->\n<jw-modal id=\"add-spare-part\" (tableAction)=\"reloadTable()\" width=\"30%\">\n\n    <p class=\"mb-2\">ADD SPARE PART TYPE</p>\n \n    <form [formGroup]=\"add_spare_type_form\" (ngSubmit)=\"onSubmitAdd()\" >\n        \n        <!--Item Type Name-->\n        <div>\n            <small>PART CODE</small>\n            <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"part_code\" />\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_spare_type_form.controls['part_code'].invalid && (add_spare_type_form.controls['part_code'].dirty \n                || add_spare_type_form.controls['part_code'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_spare_type_form.controls['part_code'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.part_code\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.part_code}}\n                </span>\n            </div>\n        </div>\n\n        <!-- Supplier -->\n        <div class=\"mt-2\">\n            <small>SUPPLIER NAME</small>\n\n            <select class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"supplier\" *ngIf=\"!supplier_loading\">\n                <option *ngFor=\"let supplier of suppliers\" value=\"{{supplier.id}}\" required>{{supplier.name}}</option>\n            </select>\n\n            <!-- Loader -->\n            <span class=\"linear-background\" *ngIf=\"supplier_loading\"></span>\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_spare_type_form.controls['supplier'].invalid && (add_spare_type_form.controls['supplier'].dirty \n                || add_spare_type_form.controls['supplier'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_spare_type_form.controls['supplier'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.supplier\">\n\n                <span class=\"text-danger opt-value\">\n                {{api_errors.supplier}}\n                </span>\n            </div>\n        </div>\n\n                <!-- Description-->\n                <div class=\"mt-2\">\n                    <small>PART DESCRIPTION</small>\n        \n                    <input class=\"mt-2 form-control form-control-sm opt-value\" formControlName=\"description\" />\n\n            \n                    <!-- Errors -->\n                    <div\n                        *ngIf=\"add_spare_type_form.controls['description'].invalid && (add_spare_type_form.controls['description'].dirty \n                        || add_spare_type_form.controls['description'].touched)\"\n                        class=\"alert\">\n                        <div *ngIf=\"add_spare_type_form.controls['description'].errors.required\">\n                        <span class=\"text-danger opt-value\">\n                            Field is required <br>\n                        </span>\n                        </div>\n                    </div>\n        \n                    <div *ngIf=\"api_errors.description\">\n        \n                        <span class=\"text-danger opt-value\">\n                        {{api_errors.description}}\n                        </span>\n                    </div>\n                </div>\n\n\n\n        <!---comment-->\n        <div class=\"mt-4\">\n            <small>COMMENT</small>\n\n            <textarea  cols=\"4\" rows=\"8\" class=\"mt-2 form-control form-control-sm opt-value\" type=\"comment\" formControlName=\"comment\" >\n            </textarea>\n\n            <!-- Errors -->\n            <div\n                *ngIf=\"add_spare_type_form.controls['comment'].invalid && (add_spare_type_form.controls['comment'].dirty \n                || add_spare_type_form.controls['comment'].touched)\"\n                class=\"alert\">\n                <div *ngIf=\"add_spare_type_form.controls['comment'].errors.required\">\n                <span class=\"text-danger opt-value\">\n                    Field is required <br>\n                </span>\n                </div>\n            </div>\n\n            <div *ngIf=\"api_errors.comment\">\n                <span class=\"text-danger opt-value\">\n                {{api_errors.comment}}\n                </span>\n            </div>\n        </div>\n\n              <!-- Re Order Level -->\n              <div class=\"mt-2\">\n                <small>Re ORDER LEVEl</small>\n    \n                <input class=\"mt-2 form-control form-control-sm opt-value\" type=\"number\" formControlName=\"re_order_level\" />\n\n    \n                <!-- Errors -->\n                <div\n                    *ngIf=\"add_spare_type_form.controls['re_order_level'].invalid && (add_spare_type_form.controls['re_order_level'].dirty \n                    || add_spare_type_form.controls['re_order_level'].touched)\"\n                    class=\"alert\">\n                    <div *ngIf=\"add_spare_type_form.controls['re_order_level'].errors.required\">\n                    <span class=\"text-danger opt-value\">\n                        Field is required <br>\n                    </span>\n                    </div>\n                </div>\n    \n                <div *ngIf=\"api_errors.re_order_level\">\n    \n                    <span class=\"text-danger opt-value\">\n                    {{api_errors.sre_order_level}}\n                    </span>\n                </div>\n            </div>\n\n         <!--Submit Button-->\n         <div class=\"row justify-content-end mt-4 pr-3\">\n            <app-default-button [outline]=\"true\" text=\"Cancel\" class=\"mr-4\"(action)=\"cancel()\" ></app-default-button>\n\n            <app-default-button text=\"Submit\" ></app-default-button>\n            \n         </div>\n\n    </form> \n\n</jw-modal>\n"],"names":[],"sourceRoot":"webpack:///"}